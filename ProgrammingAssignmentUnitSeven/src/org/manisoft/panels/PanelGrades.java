package org.manisoft.panels;

import java.awt.event.MouseEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import org.manisoft.containers.CourseList;
import org.manisoft.containers.EnrolledCoursesList;
import org.manisoft.containers.EnrollmentList;
import org.manisoft.containers.StudentList;
import org.manisoft.entities.Course;
import org.manisoft.entities.EnrolledCourse;
import org.manisoft.dialogs.DataManagementInterface;
import org.manisoft.dialogs.DialogEnrolledCourse;
import org.manisoft.dialogs.DialogGrades;
import org.manisoft.forms.FrameMain;
import org.manisoft.dialogs.OperationType;
import org.manisoft.models.GradesModel;

/**
 *
 * @author manianis
 */
public class PanelGrades extends JPanel
        implements DataManagementInterface<EnrolledCourse> {
    
    private GradesModel gradesModel = new GradesModel();
    private StudentList studentList = null;
    private EnrolledCoursesList enrolledCoursesList = null;
    private CourseList courseList = null;
    
    private Course selectedCourse = null;
    private EnrollmentList enrollmentList = null;

    /**
     * Creates new form PanelStudents
     */
    public PanelGrades() {
        initComponents();
    }
    
    public EnrolledCoursesList getEnrolledCoursesList() {
        return enrolledCoursesList;
    }
    
    public void setEnrolledCoursesList(EnrolledCoursesList courseList) {
        this.enrolledCoursesList = courseList;
        setSelectedCourse(comboCourses.getSelectedIndex());
    }
    
    public StudentList getStudentList() {
        return studentList;
    }
    
    public void setStudentList(StudentList studentList) {
        this.studentList = studentList;
    }
    
    public CourseList getCourseList() {
        return courseList;
    }
    
    public void setCourseList(CourseList courseList) {
        this.courseList = courseList;
        initCoursesCombo();
    }
    
    private void initCoursesCombo() {
        comboCourses.removeAllItems();
        for (Course course : courseList) {
            comboCourses.addItem(course.toString());
        }
        if (!courseList.isEmpty()) {
            setSelectedCourse(0);
        }
    }
    
    @Override
    public EnrolledCourse addNew() {
        EnrolledCourse course = new EnrolledCourse(selectedCourse);
        StudentList availStudentsList = StudentList.findNotEnrolledStudents(
                studentList, enrollmentList);
        JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        DialogGrades dlg = new DialogGrades(topFrame, OperationType.ADD);
        dlg.setLocationRelativeTo(topFrame);
        dlg.setData(course);
        dlg.setTitle("Enroll a student");
        dlg.setVisible(true);
        if (dlg.getDialogResult() == JOptionPane.CANCEL_OPTION) {
            return null;
        }
        return dlg.getData();
    }
    
    @Override
    public EnrolledCourse editItem(int index) {
        EnrolledCourse course = (EnrolledCourse) enrollmentList.get(index).clone();
        JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        StudentList availStudentsList = StudentList.findNotEnrolledStudents(
                studentList, enrollmentList);
        availStudentsList.add(course.getStudent());
        DialogGrades dlg = new DialogGrades(topFrame, OperationType.EDIT);
        dlg.setLocationRelativeTo(topFrame);
        dlg.setData(course);
        dlg.setTitle("Edit Student's Grades");
        dlg.setVisible(true);
        if (dlg.getDialogResult() == JOptionPane.CANCEL_OPTION) {
            return null;
        }
        return dlg.getData();
    }
    
    @Override
    public EnrolledCourse removeItem(int index) {
        EnrolledCourse course = (EnrolledCourse) enrollmentList.get(index);
        int res = JOptionPane.showConfirmDialog(
                null, "Do you want to cancel this enrollment?",
                "Cancel a Student's Enrollment",
                JOptionPane.YES_NO_OPTION);
        if (res == JOptionPane.NO_OPTION) {
            return null;
        }
        return course;
    }
    
    public void setSelectedCourse(int index) {
        if (index >= 0 && index < courseList.size()) {
            setSelectedCourse(courseList.get(index));
        }
    }
    
    public void setSelectedCourse(Course selectedCourse) {
        this.selectedCourse = selectedCourse;
        if (selectedCourse != null && enrolledCoursesList != null) {
            enrollmentList = enrolledCoursesList.enrollByCourse(selectedCourse);
            gradesModel.setCourseList(enrollmentList);
        }
    }
    
    public Course getSelectedCourse() {
        return selectedCourse;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        comboCourses = new javax.swing.JComboBox<>();
        scrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        ctrlPanel = new javax.swing.JPanel();
        editBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.rowHeights = new int[] {35, 22, 0, 32};
        layout.columnWeights = new double[] {1.0};
        setLayout(layout);

        comboCourses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboCourses.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCoursesItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 448;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(comboCourses, gridBagConstraints);

        table.setAutoCreateRowSorter(true);
        table.setModel(gradesModel);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        scrollPane.setViewportView(table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 508;
        gridBagConstraints.ipady = 191;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(scrollPane, gridBagConstraints);

        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ctrlPanelLayout = new javax.swing.GroupLayout(ctrlPanel);
        ctrlPanel.setLayout(ctrlPanelLayout);
        ctrlPanelLayout.setHorizontalGroup(
            ctrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ctrlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editBtn)
                .addContainerGap(448, Short.MAX_VALUE))
        );
        ctrlPanelLayout.setVerticalGroup(
            ctrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ctrlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 271;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(ctrlPanel, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Grades Management");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        int selItem = table.getSelectedRow();
        if (selItem == -1) {
            return;
        }
        int rowIndex = table.convertRowIndexToModel(selItem);
        EnrolledCourse course = editItem(rowIndex);
        if (course != null) {
            enrollmentList.set(rowIndex, course);
            EnrolledCourse oldCourse = enrollmentList.get(rowIndex);
            enrolledCoursesList.leaveFromCourse(oldCourse);
            enrolledCoursesList.enrollToCourse(course);
            gradesModel.fireTableRowsUpdated(rowIndex, rowIndex);
            FrameMain.frameMain.saveData();
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1
                && evt.getClickCount() == 2) {
            editBtnActionPerformed(null);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void comboCoursesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCoursesItemStateChanged
        setSelectedCourse(comboCourses.getSelectedIndex());
    }//GEN-LAST:event_comboCoursesItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboCourses;
    private javax.swing.JPanel ctrlPanel;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
